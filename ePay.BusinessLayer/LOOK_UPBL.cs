
// Auto Generated by Tool Version # (1.3.0.3)
// Macrosoft Inc on: 3/20/2015 7:25:12 PM
// Last Updated on: 

using System;
using System.Collections.Generic;
using EPay.DataClasses;
using EPay.DataAccess;

namespace EPay.BusinessLayer
{		
	public partial class LOOK_UPBL
	{
		public bool IsDirty { get; set; }
		
		public List<LOOK_UPDC>  LoadAll()
		{
			DBConnection objConnection = new DBConnection();
			LOOK_UPDA objLOOK_UPDA = new LOOK_UPDA();
			List<LOOK_UPDC>  objLOOK_UPDC = null;
            try
            {
				objConnection.Open(false);
				objLOOK_UPDC = objLOOK_UPDA.LoadAll(objConnection);
            }
            catch (Exception ex)
            {
                throw ex;
            }   
			finally 
            {
                objConnection.Close();
            }
            return objLOOK_UPDC;
		}
		
		
		public LOOK_UPDC LoadByPrimaryKey(int LOOK_UP_ID)
		{
			DBConnection objConnection = new DBConnection();
			LOOK_UPDA objLOOK_UPDA = new LOOK_UPDA();
			LOOK_UPDC objLOOK_UPDC = null;
            try
            {
				objConnection.Open(false);
				objLOOK_UPDC = objLOOK_UPDA.LoadByPrimaryKey(objConnection, LOOK_UP_ID);                
            }
            catch (Exception ex)
            {
                throw ex;
            }   
			finally 
            {
                objConnection.Close();
            }
            return objLOOK_UPDC;
		}
		public int Update(List<LOOK_UPDC> objLOOK_UPs)        
        {
            int updatedCount = 0;
            DBConnection objConnection = new DBConnection();
            LOOK_UPDA objLOOK_UPDA = new LOOK_UPDA();
            try
            {
                objConnection.Open(true);
                updatedCount = objLOOK_UPDA.Update(objConnection, objLOOK_UPs);
                IsDirty = objLOOK_UPDA.IsDirty;
                if (IsDirty)
                    objConnection.Rollback();
                else
                    objConnection.Commit();
            }
            catch (Exception ex)
            {
                objConnection.Rollback();
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return updatedCount;
        }
		public int Insert(List<LOOK_UPDC> objLOOK_UPs)        
        {
            int insertedCount = 0;
            DBConnection objConnection = new DBConnection();
            LOOK_UPDA objLOOK_UPDA = new LOOK_UPDA();
            try
            {
                objConnection.Open(true);
                insertedCount = objLOOK_UPDA.Insert(objConnection, objLOOK_UPs);
                objConnection.Commit();
            }
            catch (Exception ex)
            {
                objConnection.Rollback();
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return insertedCount;
        }
		public int Delete(List<LOOK_UPDC> objLOOK_UPs)        
        {
            int deletedCount = 0;
            DBConnection objConnection = new DBConnection();
            LOOK_UPDA objLOOK_UPDA = new LOOK_UPDA();
            try
            {
                objConnection.Open(true);
                deletedCount = objLOOK_UPDA.Delete(objConnection, objLOOK_UPs);
                objConnection.Commit();
            }
            catch (Exception ex)
            {
                objConnection.Rollback();
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return deletedCount;
        }	
		
		
	}
}
