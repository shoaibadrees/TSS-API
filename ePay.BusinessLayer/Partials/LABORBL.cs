
// Auto Generated by Tool Version # (1.3.0.3)
// Macrosoft Inc on: 3/6/2017 2:32:25 PM
// Last Updated on: 

using System;
using System.Collections.Generic;
using EPay.DataClasses;
using EPay.DataAccess;

namespace EPay.BusinessLayer
{		
	public class LABORBL
	{
		public bool IsDirty { get; set; }
		
		public List<LABORDC>  LoadAll()
		{
			DBConnection objConnection = new DBConnection();
			LABORDA objLABOR_VALUDA = new LABORDA();
			List<LABORDC>  objLABOR_VALUDC = null;
            try
            {
				objConnection.Open(false);
				objLABOR_VALUDC = objLABOR_VALUDA.LoadAll(objConnection);
            }
            catch (Exception ex)
            {
                throw ex;
            }   
			finally 
            {
                objConnection.Close();
            }
            return objLABOR_VALUDC;
		}
		
		
		public LABORDC LoadByPrimaryKey(int LABOR_VALUE_ID)
		{
			DBConnection objConnection = new DBConnection();
			LABORDA objLABOR_VALUDA = new LABORDA();
			LABORDC objLABOR_VALUDC = null;
            try
            {
				objConnection.Open(false);
				objLABOR_VALUDC = objLABOR_VALUDA.LoadByPrimaryKey(objConnection, LABOR_VALUE_ID);                
            }
            catch (Exception ex)
            {
                throw ex;
            }   
			finally 
            {
                objConnection.Close();
            }
            return objLABOR_VALUDC;
		}
        public List<LABORDC> LoadByDailyIDAndType(int DAILY_ID, int DAILY_TYPE)
        {
            DBConnection objConnection = new DBConnection();
            LABORDA objLABOR_VALUDA = new LABORDA();
            List<LABORDC> objLABOR_VALUDC = null;
            try
            {
                objConnection.Open(false);
                objLABOR_VALUDC = objLABOR_VALUDA.LoadByDailyIDAndType(objConnection, DAILY_ID, DAILY_TYPE);
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return objLABOR_VALUDC;
        }

        public List<LABORDC> GetLaborFromManPower(int DAILY_ID, int DAILY_TYPE)
        {
            DBConnection objConnection = new DBConnection();
            LABORDA objLABOR_VALUDA = new LABORDA();
            List<LABORDC> objLABOR_VALUDC = null;
            try
            {
                objConnection.Open(false);
                objLABOR_VALUDC = objLABOR_VALUDA.GetLaborFromManPower(objConnection, DAILY_ID, DAILY_TYPE);
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return objLABOR_VALUDC;
        }

        public int Update(DBConnection objConnection, LABORDC objLABOR_VALUs)        
        {
            int updatedCount = 0;
            LABORDA objLABOR_VALUDA = new LABORDA();
            updatedCount = objLABOR_VALUDA.Update(objConnection, objLABOR_VALUs);
            return updatedCount;
        }
		public int Insert(DBConnection objConnection , LABORDC objLABOR_VALUs)        
        {
            int insertedCount = 0;
            LABORDA objLABOR_VALUDA = new LABORDA();
            insertedCount = objLABOR_VALUDA.Insert(objConnection, objLABOR_VALUs);
            return insertedCount;
        }
		public int Delete(List<LABORDC> objLABOR_VALUs)        
        {
            int deletedCount = 0;
            DBConnection objConnection = new DBConnection();
            LABORDA objLABOR_VALUDA = new LABORDA();
            try
            {
                objConnection.Open(true);
                deletedCount = objLABOR_VALUDA.Delete(objConnection, objLABOR_VALUs);
                objConnection.Commit();
            }
            catch (Exception ex)
            {
                objConnection.Rollback();
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return deletedCount;
        }	
		
		
	}
}
