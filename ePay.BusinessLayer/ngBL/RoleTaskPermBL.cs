
// Auto Generated by Tool Version # (1.3.0.3)
// Macrosoft Inc on: 10/6/2018 12:16:07 AM
// Last Updated on: 

using System;
using System.Collections.Generic;
using EPay.DataClasses;
using EPay.DataAccess;

namespace EPay.BusinessLayer
{		
	public class RoleTaskPermBL
	{
		public bool IsDirty { get; set; }
		
		public List<RoleTaskPermDC>  LoadAll()
		{
			DBConnection objConnection = new DBConnection();
			RoleTaskPermDA objRoleTaskPermDA = new RoleTaskPermDA();
			List<RoleTaskPermDC>  objRoleTaskPermDC = null;
            try
            {
				objConnection.Open(false);
				objRoleTaskPermDC = objRoleTaskPermDA.LoadAll(objConnection);
            }
            catch (Exception ex)
            {
                throw ex;
            }   
			finally 
            {
                objConnection.Close();
            }
            return objRoleTaskPermDC;
		}
		
		
		public RoleTaskPermDC LoadByPrimaryKey(string RoleID, string TaskID)
		{
			DBConnection objConnection = new DBConnection();
			RoleTaskPermDA objRoleTaskPermDA = new RoleTaskPermDA();
			RoleTaskPermDC objRoleTaskPermDC = null;
            try
            {
				objConnection.Open(false);
				objRoleTaskPermDC = objRoleTaskPermDA.LoadByPrimaryKey(objConnection, RoleID, TaskID);                
            }
            catch (Exception ex)
            {
                throw ex;
            }   
			finally 
            {
                objConnection.Close();
            }
            return objRoleTaskPermDC;
		}
		public int Update(List<RoleTaskPermDC> objRoleTaskPerms)        
        {
            int updatedCount = 0;
            DBConnection objConnection = new DBConnection();
            RoleTaskPermDA objRoleTaskPermDA = new RoleTaskPermDA();
            try
            {
                objConnection.Open(true);
                updatedCount = objRoleTaskPermDA.Update(objConnection, objRoleTaskPerms);
                IsDirty = objRoleTaskPermDA.IsDirty;
                if (IsDirty)
                    objConnection.Rollback();
                else
                    objConnection.Commit();
            }
            catch (Exception ex)
            {
                objConnection.Rollback();
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return updatedCount;
        }
		public int Insert(List<RoleTaskPermDC> objRoleTaskPerms)        
        {
            int insertedCount = 0;
            DBConnection objConnection = new DBConnection();
            RoleTaskPermDA objRoleTaskPermDA = new RoleTaskPermDA();
            try
            {
                objConnection.Open(true);
                insertedCount = objRoleTaskPermDA.Insert(objConnection, objRoleTaskPerms);
                objConnection.Commit();
            }
            catch (Exception ex)
            {
                objConnection.Rollback();
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return insertedCount;
        }
		public int Delete(List<RoleTaskPermDC> objRoleTaskPerms)        
        {
            int deletedCount = 0;
            DBConnection objConnection = new DBConnection();
            RoleTaskPermDA objRoleTaskPermDA = new RoleTaskPermDA();
            try
            {
                objConnection.Open(true);
                deletedCount = objRoleTaskPermDA.Delete(objConnection, objRoleTaskPerms);
                objConnection.Commit();
            }
            catch (Exception ex)
            {
                objConnection.Rollback();
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return deletedCount;
        }	
		
		
	}
}
