
// Auto Generated by Tool Version # (1.3.0.3)
// Macrosoft Inc on: 5/2/2015 5:37:59 PM
// Last Updated on: 

using System;
using System.Collections.Generic;
using EPay.DataClasses;
using EPay.DataAccess;

namespace EPay.BusinessLayer
{		
	public partial class MESSAGEBL
	{
		public bool IsDirty { get; set; }
		
		public List<MESSAGEDC>  LoadAll()
		{
			DBConnection objConnection = new DBConnection();
			MESSAGEDA objMESSAGEDA = new MESSAGEDA();
			List<MESSAGEDC>  objMESSAGEDC = null;
            try
            {
				objConnection.Open(false);
				objMESSAGEDC = objMESSAGEDA.LoadAll(objConnection);
            }
            catch (Exception ex)
            {
                throw ex;
            }   
			finally 
            {
                objConnection.Close();
            }
            return objMESSAGEDC;
		}
		
		
		public MESSAGEDC LoadByPrimaryKey(int MESSAGE_ID)
		{
			DBConnection objConnection = new DBConnection();
			MESSAGEDA objMESSAGEDA = new MESSAGEDA();
			MESSAGEDC objMESSAGEDC = null;
            try
            {
				objConnection.Open(false);
				objMESSAGEDC = objMESSAGEDA.LoadByPrimaryKey(objConnection, MESSAGE_ID);                
            }
            catch (Exception ex)
            {
                throw ex;
            }   
			finally 
            {
                objConnection.Close();
            }
            return objMESSAGEDC;
		}
		public int Update(List<MESSAGEDC> objMESSAGEs)        
        {
            int updatedCount = 0;
            DBConnection objConnection = new DBConnection();
            MESSAGEDA objMESSAGEDA = new MESSAGEDA();
            try
            {
                objConnection.Open(true);
                updatedCount = objMESSAGEDA.Update(objConnection, objMESSAGEs);
                IsDirty = objMESSAGEDA.IsDirty;
                if (IsDirty)
                    objConnection.Rollback();
                else
                    objConnection.Commit();
            }
            catch (Exception ex)
            {
                objConnection.Rollback();
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return updatedCount;
        }
		//public int Insert(List<MESSAGEDC> objMESSAGEs)        
  //      {
  //          int insertedCount = 0;
  //          DBConnection objConnection = new DBConnection();
  //          MESSAGEDA objMESSAGEDA = new MESSAGEDA();
  //          try
  //          {
  //              objConnection.Open(true);
  //              insertedCount = objMESSAGEDA.Insert(objConnection, objMESSAGEs);
  //              objConnection.Commit();
  //          }
  //          catch (Exception ex)
  //          {
  //              objConnection.Rollback();
  //              throw ex;
  //          }
  //          finally
  //          {
  //              objConnection.Close();
  //          }
  //          return insertedCount;
  //      }
		public int Delete(List<MESSAGEDC> objMESSAGEs)        
        {
            int deletedCount = 0;
            DBConnection objConnection = new DBConnection();
            MESSAGEDA objMESSAGEDA = new MESSAGEDA();
            try
            {
                objConnection.Open(true);
                deletedCount = objMESSAGEDA.Delete(objConnection, objMESSAGEs);
                objConnection.Commit();
            }
            catch (Exception ex)
            {
                objConnection.Rollback();
                throw ex;
            }
            finally
            {
                objConnection.Close();
            }
            return deletedCount;
        }	
		
		
	}
}
