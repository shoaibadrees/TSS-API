
// Auto Generated by Tool Version # (1.3.0.3)
// Macrosoft Inc on: 3/20/2015 7:01:28 PM
// Last Updated on: 

using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using Microsoft.Practices.EnterpriseLibrary.Data;
using EPay.DataClasses;
namespace EPay.DataAccess
{		
	public class ROLES_PERMISSIONDA
	{
		public bool IsDirty {get; set;}
		
		//=================================================================
		//  	public Function LoadAll() As Boolean
		//=================================================================
		//  Loads all of the records in the database, and sets the currentRow to the first row
		//=================================================================
		public List<ROLES_PERMISSIONDC> LoadAll(DBConnection Connection)
		{
			List<ROLES_PERMISSIONDC> objROLES_PERMISSION = new List<ROLES_PERMISSIONDC>();
			StringBuilder sql = new StringBuilder();
			sql.Append("proc_ROLES_PERMISSIONSLoadAll");

			DBCommandWarpper dbCommandWrapper = new DBCommandWarpper(Connection.dataBase.GetStoredProcCommand(sql.ToString()), Connection);
 
 
            DataSet ds = new DataSet();
			
			if (Connection.Transaction != null)
				ds = Connection.dataBase.ExecuteDataSet(dbCommandWrapper.DBCommand, Connection.Transaction);
			else
				ds = Connection.dataBase.ExecuteDataSet(dbCommandWrapper.DBCommand);
			
			  foreach (DataRow drRow in ds.Tables[0].Rows)
                {
				objROLES_PERMISSION.Add(FillObject(drRow));
				}
				
            return objROLES_PERMISSION;
		}
		public int Insert(DBConnection Connection, List<ROLES_PERMISSIONDC> objROLES_PERMISSIONs)        
        {
            int insertCount = 0;
            foreach (ROLES_PERMISSIONDC objROLES_PERMISSION in objROLES_PERMISSIONs)
            {
                 insertCount = Insert(Connection, objROLES_PERMISSION);
            }
            return  insertCount;
        }
		private int Insert(DBConnection Connection, ROLES_PERMISSIONDC objROLES_PERMISSION)
        {
            int insertCount = 0;

            StringBuilder sql = new StringBuilder();
            sql.Append("proc_ROLES_PERMISSIONSInsert");

            DBCommandWarpper dbCommandWrapper = new DBCommandWarpper(Connection.dataBase.GetStoredProcCommand(sql.ToString()), Connection);
			
			dbCommandWrapper.AddInParameter("p_ROLE_ID", DbType.Int32, objROLES_PERMISSION.ROLE_ID);
			dbCommandWrapper.AddInParameter("p_SCREEN_ID", DbType.Int32, objROLES_PERMISSION.SCREEN_ID);
            dbCommandWrapper.AddInParameter("p_PERMISSION_TYPE_ID", DbType.Int32, objROLES_PERMISSION.PERMISSION_TYPE_ID);
            dbCommandWrapper.AddInParameter("p_PERMISSION_TYPE", DbType.String, objROLES_PERMISSION.PERMISSION_TYPE);
            dbCommandWrapper.AddInParameter("p_PERMISSION_TITLE", DbType.String, objROLES_PERMISSION.PERMISSION_TITLE);
            dbCommandWrapper.AddInParameter("p_GENERAL_EDIT_ACCESS_TYPE", DbType.String, objROLES_PERMISSION.GENERAL_EDIT_ACCESS_TYPE);
            dbCommandWrapper.AddInParameter("p_VIEW_ACCESS_GENERAL", DbType.Boolean, objROLES_PERMISSION.VIEW_ACCESS_GENERAL);
            dbCommandWrapper.AddInParameter("p_EDIT_ACCESS", DbType.Boolean, objROLES_PERMISSION.EDIT_ACCESS);


            if (Connection.Transaction != null)
                insertCount = Connection.dataBase.ExecuteNonQuery(dbCommandWrapper.DBCommand, Connection.Transaction);
            else
                insertCount = Connection.dataBase.ExecuteNonQuery(dbCommandWrapper.DBCommand);

            return insertCount;
        }
		public ROLES_PERMISSIONDC FillObject(DataRow row)
        {
			ROLES_PERMISSIONDC objROLES_PERMISSION = null;
			objROLES_PERMISSION = new ROLES_PERMISSIONDC();
			objROLES_PERMISSION.ROLE_ID = (int)row["ROLE_ID"];
            objROLES_PERMISSION.SCREEN_ID = row["SCREEN_ID"] == DBNull.Value ? -1 : (int)row["SCREEN_ID"];
            objROLES_PERMISSION.PERMISSION_TYPE_ID = row["PERMISSION_TYPE_ID"] == DBNull.Value ? -1 : (int)row["PERMISSION_TYPE_ID"];
            objROLES_PERMISSION.PERMISSION_TYPE = (String)row["PERMISSION_TYPE"];
            objROLES_PERMISSION.PERMISSION_TITLE = row["PERMISSION_TITLE"] == DBNull.Value ? "" : (String)row["PERMISSION_TITLE"];
            objROLES_PERMISSION.GENERAL_EDIT_ACCESS_TYPE = row["GENERAL_EDIT_ACCESS_TYPE"] == DBNull.Value ? "" : (String)row["GENERAL_EDIT_ACCESS_TYPE"];
            objROLES_PERMISSION.VIEW_ACCESS_GENERAL = row["VIEW_ACCESS_GENERAL"] == DBNull.Value ? false : (bool)row["VIEW_ACCESS_GENERAL"];
            objROLES_PERMISSION.EDIT_ACCESS = row["EDIT_ACCESS"] == DBNull.Value ? false : (bool)row["EDIT_ACCESS"];

            return objROLES_PERMISSION;
        }
	}
}
