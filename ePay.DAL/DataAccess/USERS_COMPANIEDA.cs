
// Auto Generated by Tool Version # (1.3.0.3)
// Macrosoft Inc on: 3/20/2015 7:01:29 PM
// Last Updated on: 

using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Linq;
using Microsoft.Practices.EnterpriseLibrary.Data;
using EPay.DataClasses;
namespace EPay.DataAccess
{
    public partial class USERS_COMPANIEDA
    {
        public bool IsDirty { get; set; }

        //=================================================================
        //  	public Function LoadAll() As Boolean
        //=================================================================
        //  Loads all of the records in the database, and sets the currentRow to the first row
        //=================================================================
        public List<USERS_COMPANIEDC> LoadAll(DBConnection Connection)
        {
            List<USERS_COMPANIEDC> objUSERS_COMPANIE = new List<USERS_COMPANIEDC>();
            StringBuilder sql = new StringBuilder();
            sql.Append("proc_USERS_COMPANIESLoadAll");

            DBCommandWarpper dbCommandWrapper = new DBCommandWarpper(Connection.dataBase.GetStoredProcCommand(sql.ToString()), Connection);


            DataSet ds = new DataSet();

            if (Connection.Transaction != null)
                ds = Connection.dataBase.ExecuteDataSet(dbCommandWrapper.DBCommand, Connection.Transaction);
            else
                ds = Connection.dataBase.ExecuteDataSet(dbCommandWrapper.DBCommand);

            foreach (DataRow drRow in ds.Tables[0].Rows)
            {
                objUSERS_COMPANIE.Add(FillObject(drRow));
            }

            return objUSERS_COMPANIE;
        }
        public int Insert(DBConnection Connection, List<USERS_COMPANIEDC> objUSERS_COMPANIEs)
        {
            int insertCount = 0;
            foreach (USERS_COMPANIEDC objUSERS_COMPANIE in objUSERS_COMPANIEs)
            {
                insertCount = Insert(Connection, objUSERS_COMPANIE);
            }
            return insertCount;
        }
        private int Insert(DBConnection Connection, USERS_COMPANIEDC objUSERS_COMPANIE)
        {
            int insertCount = 0;

            StringBuilder sql = new StringBuilder();
            sql.Append("proc_USERS_COMPANIESInsert");

            DBCommandWarpper dbCommandWrapper = new DBCommandWarpper(Connection.dataBase.GetStoredProcCommand(sql.ToString()), Connection);

            dbCommandWrapper.AddInParameter("p_USER_ID", DbType.Int32, objUSERS_COMPANIE.USER_ID);
            dbCommandWrapper.AddInParameter("p_COMPANY_ID", DbType.Int32, objUSERS_COMPANIE.COMPANY_ID);


            if (Connection.Transaction != null)
                insertCount = Connection.dataBase.ExecuteNonQuery(dbCommandWrapper.DBCommand, Connection.Transaction);
            else
                insertCount = Connection.dataBase.ExecuteNonQuery(dbCommandWrapper.DBCommand);

            return insertCount;
        }
        private USERS_COMPANIEDC FillObject(IDataReader reader)
        {
            USERS_COMPANIEDC objUSERS_COMPANIE = null;
            if (reader != null && reader.Read())
            {
                objUSERS_COMPANIE = new USERS_COMPANIEDC();
                objUSERS_COMPANIE.USER_ID = (int)reader["USER_ID"];
                objUSERS_COMPANIE.COMPANY_ID = (int)reader["COMPANY_ID"];

                reader.Close();
                reader.Dispose();
            }
            return objUSERS_COMPANIE;
        }
        private USERS_COMPANIEDC FillObject(DataRow row)
        {
            USERS_COMPANIEDC objUSERS_COMPANIE = null;
            objUSERS_COMPANIE = new USERS_COMPANIEDC();
            objUSERS_COMPANIE.USER_ID = (int)row["USER_ID"];
            objUSERS_COMPANIE.COMPANY_ID = (int)row["COMPANY_ID"];

            return objUSERS_COMPANIE;
        }

    }
}
