
// Auto Generated by Tool Version # (1.3.0.3)
// Macrosoft Inc on: 4/7/2015 6:50:35 PM
// Last Updated on: 

using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using Microsoft.Practices.EnterpriseLibrary.Data;
using Microsoft.Practices.EnterpriseLibrary.Data.Sql;
using EPay.DataClasses;
using EPay.Common;
using System.Data.Common;


namespace EPay.DataAccess
{
    public partial class COMPANIEDA
    {
        public List<COMPANIEDC> GetCompaniesForExport(string COMPANIES_IDs, DBConnection Connection)
        {
            List<COMPANIEDC> objCOMPANIE = new List<COMPANIEDC>();
            StringBuilder sql = new StringBuilder();
            sql.Append("proc_ExportCompanies");

            SqlDatabase database = (SqlDatabase)Connection.dataBase;

            DbCommand cmd = database.GetStoredProcCommand(sql.ToString());

            database.AddInParameter(cmd, "@p_COMPANIES_IDs", SqlDbType.Structured, Utility.CreateIDsTable(Array.ConvertAll<string, int>(((String)COMPANIES_IDs).Split(','), Convert.ToInt32)));

            DataSet ds = new DataSet();

            if (Connection.Transaction != null)
                ds = database.ExecuteDataSet(cmd, Connection.Transaction);
            else
                ds = database.ExecuteDataSet(cmd);

            if (ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow drRow in ds.Tables[0].Rows)
                {
                    objCOMPANIE.Add(FillObject(drRow));
                }
            }

            return objCOMPANIE;
        }
        
        public List<COMPANIEDC> LoadAllActiveCompanies(DBConnection Connection)
        {
            List<COMPANIEDC> objCOMPANIE = new List<COMPANIEDC>();
            StringBuilder sql = new StringBuilder();
            sql.Append("proc_ACTIVECOMPANIESLoadAll");

            DBCommandWarpper dbCommandWrapper = new DBCommandWarpper(Connection.dataBase.GetStoredProcCommand(sql.ToString()), Connection);


            DataSet ds = new DataSet();

            if (Connection.Transaction != null)
                ds = Connection.dataBase.ExecuteDataSet(dbCommandWrapper.DBCommand, Connection.Transaction);
            else
                ds = Connection.dataBase.ExecuteDataSet(dbCommandWrapper.DBCommand);

            COMPANIEDC ObjComp;
            foreach (DataRow drRow in ds.Tables[0].Rows)
            {
                ObjComp = new COMPANIEDC();
                ObjComp.COMPANY_ID = (int)drRow["COMPANY_ID"];
                ObjComp.COMPANY_NAME = (String)drRow["COMPANY_NAME"];
                //if (drRow.Table.Columns.Contains("HOME_RMAG"))
                //{
                //    ObjComp.HOME_RMAG = (int)drRow["HOME_RMAG"];
                //}
                objCOMPANIE.Add(ObjComp);
            }

            return objCOMPANIE;
        }
        

        private COMPANIEDC FillObject(DataRow row)
        {
            COMPANIEDC objCOMPANIE = null;
            objCOMPANIE = new COMPANIEDC();
            objCOMPANIE.COMPANY_ID = (int)row["COMPANY_ID"];
            objCOMPANIE.COMPANY_NAME = (String)row["COMPANY_NAME"];
            //objCOMPANIE.TOTAL_CUSTOMERS = (long)row["TOTAL_CUSTOMERS"];
            //objCOMPANIE.RMAG.RMAG_ID = (int)row["HOME_RMAG"];
            //objCOMPANIE.RMAG.RMAG_NAME = (String)row["RMAG_NAME"];
            //if (row.Table.Columns.Contains("RMAGS"))
            //{
            //    objCOMPANIE.RMAGS = Utility.FillArray(row["RMAGS"] != DBNull.Value ? (String)row["RMAGS"] : "");
            //}
            //if (row.Table.Columns.Contains("RMAGS_NAMES"))
            //{
            //    objCOMPANIE.RMAGS_NAMES = row["RMAGS_NAMES"] != DBNull.Value ? (String)row["RMAGS_NAMES"] : "";
            //}
            objCOMPANIE.COMPANY_PHONE_NUMBER = (String)row["COMPANY_PHONE_NUMBER"];
            objCOMPANIE.PRIMARY_CONTACT_NAME = (String)row["PRIMARY_CONTACT_NAME"];
            objCOMPANIE.PRIMARY_CONTACT_EMAIL = (String)row["PRIMARY_CONTACT_EMAIL"];

            objCOMPANIE.COMPANY_CITY = (String)row["COMPANY_CITY"];
            objCOMPANIE.COMPANY_STATE = row["COMPANY_STATE"].ToString();
            objCOMPANIE.COMPANY_ZIP = (String)row["COMPANY_ZIP"];
            objCOMPANIE.COMPANY_ADDRESS = Convert.ToString(row["COMPANY_ADDRESS"]);
            objCOMPANIE.STATUS = (String)row["STATUS"];
            if (row.Table.Columns.Contains("CREATED_ON"))
            {
                objCOMPANIE.CREATED_ON = (DateTime)row["CREATED_ON"];
            }
            if (row.Table.Columns.Contains("CREATED_BY"))
            {
                objCOMPANIE.CREATED_BY = (int)row["CREATED_BY"];
            }
            if (row.Table.Columns.Contains("MODIFIED_ON"))
            {
                objCOMPANIE.MODIFIED_ON = (DateTime)row["MODIFIED_ON"];
            }
            if (row.Table.Columns.Contains("MODIFIED_BY"))
            {
                objCOMPANIE.MODIFIED_BY = (int)row["MODIFIED_BY"];
            }
            if (row.Table.Columns.Contains("LOCK_COUNTER"))
            {
                objCOMPANIE.LOCK_COUNTER = (!string.IsNullOrEmpty(row["LOCK_COUNTER"].ToString()) ? (int)row["LOCK_COUNTER"] : 0);
            }
            objCOMPANIE.BILLING_CONTACT_NAME = Convert.ToString(row["BILLING_CONTACT_NAME"]);
            objCOMPANIE.BILLING_PHONE = Convert.ToString(row["BILLING_PHONE"]);
            objCOMPANIE.BILLING_CONTACT_EMAIL = Convert.ToString(row["BILLING_CONTACT_EMAIL"]);
            objCOMPANIE.PROJECT_DIRECTOR_NAME = Convert.ToString(row["PROJECT_DIRECTOR_NAME"]);
            objCOMPANIE.PROJECT_DIRECTOR_PHONE = Convert.ToString(row["PROJECT_DIRECTOR_PHONE"]);
            objCOMPANIE.PROJECT_DIRECTOR_EMAIL = Convert.ToString(row["PROJECT_DIRECTOR_EMAIL"]);
            objCOMPANIE.PROJECT_MANAGER_NAME = Convert.ToString(row["PROJECT_MANAGER_NAME"]);
            objCOMPANIE.PROJECT_MANAGER_PHONE = Convert.ToString(row["PROJECT_MANAGER_PHONE"]);
            objCOMPANIE.PROJECT_MANAGER_EMAIL = Convert.ToString(row["PROJECT_MANAGER_EMAIL"]);
            return objCOMPANIE;
        }

        private COMPANIEDC FillObject(IDataReader reader)
        {
            COMPANIEDC objCOMPANIE = null;
            if (reader != null && reader.Read())
            {
                objCOMPANIE = new COMPANIEDC();
                objCOMPANIE.COMPANY_ID = (int)reader["COMPANY_ID"];
                objCOMPANIE.COMPANY_NAME = (String)reader["COMPANY_NAME"];
                //objCOMPANIE.TOTAL_CUSTOMERS = (long)reader["TOTAL_CUSTOMERS"];
                //objCOMPANIE.RMAG.RMAG_ID = (int)reader["HOME_RMAG"];

                objCOMPANIE.COMPANY_PHONE_NUMBER = (String)reader["COMPANY_PHONE_NUMBER"];
                objCOMPANIE.PRIMARY_CONTACT_NAME = (String)reader["PRIMARY_CONTACT_NAME"];
                objCOMPANIE.PRIMARY_CONTACT_EMAIL = (String)reader["PRIMARY_CONTACT_EMAIL"];

                objCOMPANIE.COMPANY_CITY = (String)reader["COMPANY_CITY"];
                objCOMPANIE.COMPANY_STATE = (String)reader["COMPANY_STATE"];
                objCOMPANIE.COMPANY_ZIP = (String)reader["COMPANY_ZIP"];
                objCOMPANIE.COMPANY_ADDRESS = Convert.ToString(reader["COMPANY_ADDRESS"]);

                objCOMPANIE.STATUS = (String)reader["STATUS"];
                objCOMPANIE.CREATED_ON = (DateTime)reader["CREATED_ON"];
                objCOMPANIE.CREATED_BY = (int)reader["CREATED_BY"];
                objCOMPANIE.MODIFIED_ON = (DateTime)reader["MODIFIED_ON"];
                objCOMPANIE.MODIFIED_BY = (int)reader["MODIFIED_BY"];
                objCOMPANIE.LOCK_COUNTER = (!string.IsNullOrEmpty(reader["LOCK_COUNTER"].ToString()) ? (int)reader["LOCK_COUNTER"] : 0);

                objCOMPANIE.BILLING_CONTACT_NAME = Convert.ToString(reader["BILLING_CONTACT_NAME"]);
                objCOMPANIE.BILLING_PHONE = Convert.ToString(reader["BILLING_PHONE"]);
                objCOMPANIE.BILLING_CONTACT_EMAIL = Convert.ToString(reader["BILLING_CONTACT_EMAIL"]);
                objCOMPANIE.PROJECT_DIRECTOR_NAME = Convert.ToString(reader["PROJECT_DIRECTOR_NAME"]);
                objCOMPANIE.PROJECT_DIRECTOR_PHONE = Convert.ToString(reader["PROJECT_DIRECTOR_PHONE"]);
                objCOMPANIE.PROJECT_DIRECTOR_EMAIL = Convert.ToString(reader["PROJECT_DIRECTOR_EMAIL"]);
                objCOMPANIE.PROJECT_MANAGER_NAME = Convert.ToString(reader["PROJECT_MANAGER_NAME"]);
                objCOMPANIE.PROJECT_MANAGER_PHONE = Convert.ToString(reader["PROJECT_MANAGER_PHONE"]);
                objCOMPANIE.PROJECT_MANAGER_EMAIL = Convert.ToString(reader["PROJECT_MANAGER_EMAIL"]);


                reader.Close();
                reader.Dispose();
            }
            return objCOMPANIE;
        }

      
        public int UpdateCompanyRmags(DBConnection Connection, COMPANIEDC objCompany)
        {
            int updateCount = 0;

            StringBuilder sql = new StringBuilder();
            sql.Append("proc_COMPANIESUpdateCOMPANIES_RMAGS");

            SqlDatabase database = (SqlDatabase)Connection.dataBase;

            DbCommand cmd = database.GetStoredProcCommand(sql.ToString());

            database.AddInParameter(cmd, "p_COMPANY_ID", SqlDbType.Int, objCompany.COMPANY_ID);
            //database.AddInParameter(cmd, "@p_COMPANIES_RMAGS_IDs", SqlDbType.Structured, Utility.CreateIDsTable(objCompany.RMAGS));
            //database.AddInParameter(cmd, "p_CREATED_ON", SqlDbType.DateTime, objCompany.CREATED_ON);
            //database.AddInParameter(cmd, "p_CREATED_BY", SqlDbType.Int, objCompany.CREATED_BY);
            //database.AddInParameter(cmd, "p_MODIFIED_BY", SqlDbType.Int, objCompany.MODIFIED_BY);


            if (Connection.Transaction != null)
                updateCount = database.ExecuteNonQuery(cmd, Connection.Transaction);
            else
                updateCount = database.ExecuteNonQuery(cmd);

            if (updateCount == 0)
                objCompany.IsDirty = IsDirty = true;

            return updateCount;
        }

        public string CompanyNameString(DBConnection Connection, string companyids)
        {

            string companyNames = string.Empty;
            StringBuilder sql = new StringBuilder();
            sql.Append("proc_LoadCompanyNameByCompanyIDString");

            DBCommandWarpper dbCommandWrapper = new DBCommandWarpper(Connection.dataBase.GetStoredProcCommand(sql.ToString()), Connection);
            dbCommandWrapper.AddInParameter("p_company_id", DbType.String, companyids);

            DataSet ds = new DataSet();

            if (Connection.Transaction != null)
                ds = Connection.dataBase.ExecuteDataSet(dbCommandWrapper.DBCommand, Connection.Transaction);
            else
                ds = Connection.dataBase.ExecuteDataSet(dbCommandWrapper.DBCommand);

            if (ds.Tables[0].Rows.Count > 0)
            {
                companyNames = ds.Tables[0].Rows[0][0].ToString();
            }
            return companyNames;
        }
       
       
    }
}
